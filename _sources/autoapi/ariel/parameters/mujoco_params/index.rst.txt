:py:mod:`mujoco_params`
========================================

.. py:module:: ariel.parameters.mujoco_params

.. autoapi-nested-parse::

   TODO(jmdm): description of script.

   .. admonition:: Notes

      *

   .. admonition:: References

      [1]

   .. todo:: [ ]



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   ariel.parameters.mujoco_params.MujocoConfig




Attributes
~~~~~~~~~~

.. autoapisummary::

   ariel.parameters.mujoco_params.WeightType
   ariel.parameters.mujoco_params.DimensionType
   ariel.parameters.mujoco_params.SCRIPT_NAME
   ariel.parameters.mujoco_params.CWD
   ariel.parameters.mujoco_params.DATA
   ariel.parameters.mujoco_params.SEED
   ariel.parameters.mujoco_params.RNG


.. py:type:: WeightType
   :canonical: float


.. py:type:: DimensionType
   :canonical: tuple[float, float, float]


.. py:data:: SCRIPT_NAME

.. py:data:: CWD

.. py:data:: DATA

.. py:data:: SEED
   :value: 42


.. py:data:: RNG

.. py:class:: MujocoConfig(_case_sensitive: bool | None = None, _nested_model_default_partial_update: bool | None = None, _env_prefix: str | None = None, _env_file: pydantic_settings.sources.DotenvType | None = ENV_FILE_SENTINEL, _env_file_encoding: str | None = None, _env_ignore_empty: bool | None = None, _env_nested_delimiter: str | None = None, _env_nested_max_split: int | None = None, _env_parse_none_str: str | None = None, _env_parse_enums: bool | None = None, _cli_prog_name: str | None = None, _cli_parse_args: bool | list[str] | tuple[str, Ellipsis] | None = None, _cli_settings_source: pydantic_settings.sources.CliSettingsSource[Any] | None = None, _cli_parse_none_str: str | None = None, _cli_hide_none_type: bool | None = None, _cli_avoid_json: bool | None = None, _cli_enforce_required: bool | None = None, _cli_use_class_docs_for_groups: bool | None = None, _cli_exit_on_error: bool | None = None, _cli_prefix: str | None = None, _cli_flag_prefix_char: str | None = None, _cli_implicit_flags: bool | None = None, _cli_ignore_unknown_args: bool | None = None, _cli_kebab_case: bool | None = None, _cli_shortcuts: collections.abc.Mapping[str, str | list[str]] | None = None, _secrets_dir: pydantic_settings.sources.PathType | None = None, **values: Any)

   Bases: :py:obj:`pydantic_settings.BaseSettings`

   .. autoapi-inheritance-diagram:: ariel.parameters.mujoco_params.MujocoConfig
      :parts: 1


   Base class for settings, allowing values to be overridden by environment variables.

   This is useful in production for secrets you do not wish to save in code, it plays nicely with docker(-compose),
   Heroku and any 12 factor app design.

   All the below attributes can be set via `model_config`.

   :param _case_sensitive: Whether environment and CLI variable names should be read with case-sensitivity.
                           Defaults to `None`.
   :param _nested_model_default_partial_update: Whether to allow partial updates on nested model default object fields.
                                                Defaults to `False`.
   :param _env_prefix: Prefix for all environment variables. Defaults to `None`.
   :param _env_file: The env file(s) to load settings values from. Defaults to `Path('')`, which
                     means that the value from `model_config['env_file']` should be used. You can also pass
                     `None` to indicate that environment variables should not be loaded from an env file.
   :param _env_file_encoding: The env file encoding, e.g. `'latin-1'`. Defaults to `None`.
   :param _env_ignore_empty: Ignore environment variables where the value is an empty string. Default to `False`.
   :param _env_nested_delimiter: The nested env values delimiter. Defaults to `None`.
   :param _env_nested_max_split: The nested env values maximum nesting. Defaults to `None`, which means no limit.
   :param _env_parse_none_str: The env string value that should be parsed (e.g. "null", "void", "None", etc.)
                               into `None` type(None). Defaults to `None` type(None), which means no parsing should occur.
   :param _env_parse_enums: Parse enum field names to values. Defaults to `None.`, which means no parsing should occur.
   :param _cli_prog_name: The CLI program name to display in help text. Defaults to `None` if _cli_parse_args is `None`.
                          Otherwise, defaults to sys.argv[0].
   :param _cli_parse_args: The list of CLI arguments to parse. Defaults to None.
                           If set to `True`, defaults to sys.argv[1:].
   :param _cli_settings_source: Override the default CLI settings source with a user defined instance. Defaults to None.
   :param _cli_parse_none_str: The CLI string value that should be parsed (e.g. "null", "void", "None", etc.) into
                               `None` type(None). Defaults to _env_parse_none_str value if set. Otherwise, defaults to "null" if
                               _cli_avoid_json is `False`, and "None" if _cli_avoid_json is `True`.
   :param _cli_hide_none_type: Hide `None` values in CLI help text. Defaults to `False`.
   :param _cli_avoid_json: Avoid complex JSON objects in CLI help text. Defaults to `False`.
   :param _cli_enforce_required: Enforce required fields at the CLI. Defaults to `False`.
   :param _cli_use_class_docs_for_groups: Use class docstrings in CLI group help text instead of field descriptions.
                                          Defaults to `False`.
   :param _cli_exit_on_error: Determines whether or not the internal parser exits with error info when an error occurs.
                              Defaults to `True`.
   :param _cli_prefix: The root parser command line arguments prefix. Defaults to "".
   :param _cli_flag_prefix_char: The flag prefix character to use for CLI optional arguments. Defaults to '-'.
   :param _cli_implicit_flags: Whether `bool` fields should be implicitly converted into CLI boolean flags.
                               (e.g. --flag, --no-flag). Defaults to `False`.
   :param _cli_ignore_unknown_args: Whether to ignore unknown CLI args and parse only known ones. Defaults to `False`.
   :param _cli_kebab_case: CLI args use kebab case. Defaults to `False`.
   :param _cli_shortcuts: Mapping of target field name to alias names. Defaults to `None`.
   :param _secrets_dir: The secret files directory or a sequence of directories. Defaults to `None`.


   .. py:attribute:: autolimits
      :type:  bool
      :value: True



   .. py:attribute:: balanceinertia
      :type:  bool
      :value: True



   .. py:attribute:: degree
      :type:  bool
      :value: False



   .. py:attribute:: timestep
      :type:  float
      :value: 0.02



   .. py:attribute:: integrator
      :type:  int


   .. py:attribute:: offheight
      :type:  int
      :value: 960



   .. py:attribute:: offwidth
      :type:  int
      :value: 1280



   .. py:attribute:: floor_name
      :type:  str
      :value: 'floor'



